SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='D/M/YYYY';
SET TimestampFormat='D/M/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=0;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


RawData:
Load * Inline [
    ClientId, Date      , Value
    1       , 01/01/2021, 1
    1       , 02/01/2021, 2
    1       , 03/01/2021, 3
    2       , 04/01/2021, 4
    2       , 05/01/2021, 5
    3       , 06/01/2021, 6
    3       , 07/01/2021, 7
    3       , 08/01/2021, 8
];

// Get min and max possible dates from the "transactions" table
Dates:
Load
  Min(Date) as MinDate,
  Max(Date) as MaxDate
Resident
  RawData
;

// set the min and max dates as variables
let vMinDate = num(peek('MinDate'));
let vMaxDate = num(peek('MaxDate'));

// we dont need this table anymore
Drop Table Dates;

// generate table with all possible values
// between the min and max dates
TempCalendar:
Load
  Date($(vMinDate) + recno () - 1, 'DD/MM/YYYY' ) as TempDate
Autogenerate
  (num($(vMaxDate)) - num($(vMinDate)) + 1)
;

// join the clientId and the dates
// this will create all possible combinations
// between clientId and dates
CliendDates_Temp:
Load distinct
  ClientId
Resident
  RawData
;

join

Load
  TempDate
Resident
  TempCalendar
;

// we dont need this table anymore
Drop Table TempCalendar;

// join the transactions data with the table containing all
// client <-> dates link
// flag the client <-> dates records (RawDataSource fiels)
CliendDates_Temp1:
Load
  ClientId,
  TempDate as Date
Resident
  CliendDates_Temp
;

join

Load distinct
  ClientId,
  Date,
  1 as RawDataSource
Resident
  RawData
;

// we dont need this table anymore
Drop Table CliendDates_Temp;


// load only the records that do not exists in the "transactions" table
// add 0 as Value for them#
// concatenate the result to the transactions table
Concatenate (RawData)
Load
  ClientId,
  Date,
  0 as Value
Resident
  CliendDates_Temp1
Where
  RawDataSource <> 1
;

// we dont need this table anymore
Drop Table CliendDates_Temp1;


/*
At this point the original/transactions table will containt the 
initial data + all the "gap" dates for each client but with Value = 0

ClientId, Date      , Value
1       , 01/01/2021, 1
1       , 02/01/2021, 2
1       , 03/01/2021, 3
1       , 04/01/2021, 0
1       , 05/01/2021, 0
1       , 06/01/2021, 0
1       , 07/01/2021, 0
1       , 08/01/2021, 0
...
/*
